# reloads tmux conf
bind r source-file ${HOME}/.config/tmux/tmux.conf \; display 'rElOaD'

# set prefix
unbind C-b
set -g prefix C-space
bind C-space send-prefix

# window numbering
set -g base-index 1
set-window-option -g pane-base-index 1
set -g renumber-windows on

# copy[-pasta]-mode-vi
set -g mode-keys vi
set -g default-shell $SHELL
set -g default-command 'reattach-to-user-namespace -l ${SHELL}'
bind v copy-mode
# v-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'reattach-to-user-namespace -l ${SHELL}'
bind -T copy-mode-vi M-Escape send -X cancel
# incremental search
bind-key -T copy-mode-vi / command-prompt -i -p "search ▼" "send -X search-forward-incremental  \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search ▲" "send -X search-backward-incremental \"%%%\""

#### START mrjones2014/smart-splits.nvim ####
# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
#### END mrjones2014/smart-splits.nvim ####

# split window
bind | split-window -h
bind - split-window -v

# launcher
bind f run-shell 'zsh ${HOME}/.config/tmux/tmux-session-launcher.sh'

# borders
set -g pane-active-border-style 'fg=white'
set -g pane-border-style 'fg=black'

# status bar
set -g focus-events on

set -g status-justify left
set -g status-left '#[bg=#(bash ${HOME}/.config/tmux/tmux-session-color.sh)] #S '
set -g status-left-length 99
set -g status-right '#[bg=#(bash ${HOME}/.config/tmux/tmux-session-color.sh)] ¯\(°_o)/¯ '
set -g status-right-length 99
set -g status-style 'fg=black,bold'

set -g window-status-format '#[fg=black] #I #W '
set -g window-status-current-format '#[bg=white] #I #W '

# term colors
set -g default-terminal "tmux-256color"
set -g terminal-overrides ",alacritty:RGB"

